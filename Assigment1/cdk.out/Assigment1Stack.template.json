{
 "Resources": {
  "MyFirstBucket1B7D2321D": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/MyFirstBucket1/Resource"
   }
  },
  "MyFirstBucket1Policy295FDD3C": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "MyFirstBucket1B7D2321D"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "MyFirstBucket1B7D2321D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MyFirstBucket1B7D2321D",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/MyFirstBucket1/Policy/Resource"
   }
  },
  "MyFirstBucket1AutoDeleteObjectsCustomResourceB597D991": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "MyFirstBucket1B7D2321D"
    }
   },
   "DependsOn": [
    "MyFirstBucket1Policy295FDD3C"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/MyFirstBucket1/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "64267bdade6530c78c99e1df05c9336e81c8dad82fdb06133ee90f7390f69d26.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "MyFirstBucket1B7D2321D"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.64267bdade6530c78c99e1df05c9336e81c8dad82fdb06133ee90f7390f69d26",
    "aws:asset:property": "Code"
   }
  },
  "CodeRepoDC8A9D5F": {
   "Type": "AWS::CodeCommit::Repository",
   "Properties": {
    "RepositoryName": "my-code-repo"
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/CodeRepo/Resource"
   }
  },
  "InstanceVpc678D242B": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/Resource"
   }
  },
  "InstanceVpcPublicSubnet1Subnet83FE0136": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet1/Subnet"
   }
  },
  "InstanceVpcPublicSubnet1RouteTable19B4FFDE": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet1/RouteTable"
   }
  },
  "InstanceVpcPublicSubnet1RouteTableAssociation568CFF48": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPublicSubnet1RouteTable19B4FFDE"
    },
    "SubnetId": {
     "Ref": "InstanceVpcPublicSubnet1Subnet83FE0136"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "InstanceVpcPublicSubnet1DefaultRoute81EE6841": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPublicSubnet1RouteTable19B4FFDE"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "InstanceVpcIGWC128D36F"
    }
   },
   "DependsOn": [
    "InstanceVpcVPCGWB9068B2B"
   ],
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "InstanceVpcPublicSubnet1EIPC723E037": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet1/EIP"
   }
  },
  "InstanceVpcPublicSubnet1NATGateway89A15196": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "InstanceVpcPublicSubnet1Subnet83FE0136"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "InstanceVpcPublicSubnet1EIPC723E037",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "InstanceVpcPublicSubnet1DefaultRoute81EE6841",
    "InstanceVpcPublicSubnet1RouteTableAssociation568CFF48"
   ],
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet1/NATGateway"
   }
  },
  "InstanceVpcPublicSubnet2SubnetE496164F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet2/Subnet"
   }
  },
  "InstanceVpcPublicSubnet2RouteTable9577B455": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet2/RouteTable"
   }
  },
  "InstanceVpcPublicSubnet2RouteTableAssociation4771AA74": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPublicSubnet2RouteTable9577B455"
    },
    "SubnetId": {
     "Ref": "InstanceVpcPublicSubnet2SubnetE496164F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "InstanceVpcPublicSubnet2DefaultRoute46AEB0D2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPublicSubnet2RouteTable9577B455"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "InstanceVpcIGWC128D36F"
    }
   },
   "DependsOn": [
    "InstanceVpcVPCGWB9068B2B"
   ],
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "InstanceVpcPublicSubnet2EIPADEE0678": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet2/EIP"
   }
  },
  "InstanceVpcPublicSubnet2NATGateway340C143C": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "InstanceVpcPublicSubnet2SubnetE496164F"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "InstanceVpcPublicSubnet2EIPADEE0678",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "InstanceVpcPublicSubnet2DefaultRoute46AEB0D2",
    "InstanceVpcPublicSubnet2RouteTableAssociation4771AA74"
   ],
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PublicSubnet2/NATGateway"
   }
  },
  "InstanceVpcPrivateSubnet1Subnet46C04CD6": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PrivateSubnet1/Subnet"
   }
  },
  "InstanceVpcPrivateSubnet1RouteTable7CECA589": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PrivateSubnet1/RouteTable"
   }
  },
  "InstanceVpcPrivateSubnet1RouteTableAssociation39D10F7C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPrivateSubnet1RouteTable7CECA589"
    },
    "SubnetId": {
     "Ref": "InstanceVpcPrivateSubnet1Subnet46C04CD6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "InstanceVpcPrivateSubnet1DefaultRouteAB784E20": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPrivateSubnet1RouteTable7CECA589"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "InstanceVpcPublicSubnet1NATGateway89A15196"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "InstanceVpcPrivateSubnet2Subnet8DCB4F6A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PrivateSubnet2/Subnet"
   }
  },
  "InstanceVpcPrivateSubnet2RouteTable9EC69C41": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PrivateSubnet2/RouteTable"
   }
  },
  "InstanceVpcPrivateSubnet2RouteTableAssociation3F2555A1": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPrivateSubnet2RouteTable9EC69C41"
    },
    "SubnetId": {
     "Ref": "InstanceVpcPrivateSubnet2Subnet8DCB4F6A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "InstanceVpcPrivateSubnet2DefaultRouteB47A15C6": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "InstanceVpcPrivateSubnet2RouteTable9EC69C41"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "InstanceVpcPublicSubnet2NATGateway340C143C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "InstanceVpcIGWC128D36F": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assigment1Stack/InstanceVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/IGW"
   }
  },
  "InstanceVpcVPCGWB9068B2B": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    },
    "InternetGatewayId": {
     "Ref": "InstanceVpcIGWC128D36F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/VPCGW"
   }
  },
  "InstanceVpcRestrictDefaultSecurityGroupCustomResource03FB4290": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "InstanceVpc678D242B",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceVpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "InstanceVpc678D242B",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.e77031893275c08bcaa0a774aa8b611727afd045b3b5d8e1e6f0f04063d9d386",
    "aws:asset:property": "Code"
   }
  },
  "InstanceSecurityGroup896E10BF": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Assigment1Stack/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH access",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     }
    ],
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/InstanceSecurityGroup/Resource"
   }
  },
  "AppInstanceInstanceRole67BDC071": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assigment1Stack/AppInstance"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/AppInstance/InstanceRole/Resource"
   }
  },
  "AppInstanceInstanceProfileC6B6EFAA": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "AppInstanceInstanceRole67BDC071"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/AppInstance/InstanceProfile"
   }
  },
  "AppInstance13C82D50": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "AppInstanceInstanceProfileC6B6EFAA"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "InstanceSecurityGroup896E10BF",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "InstanceVpcPrivateSubnet1Subnet46C04CD6"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Assigment1Stack/AppInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash"
    }
   },
   "DependsOn": [
    "AppInstanceInstanceRole67BDC071"
   ],
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/AppInstance/Resource"
   }
  },
  "EKSClusterKubectlHandlerRoleCB45095B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     },
     {
      "Fn::If": [
       "EKSClusterHasEcrPublic0E1E292B",
       {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly"
         ]
        ]
       },
       {
        "Ref": "AWS::NoValue"
       }
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/KubectlHandlerRole/Resource"
   }
  },
  "EKSClusterKubectlHandlerRoleDefaultPolicyFF7EEBDC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "eks:DescribeCluster",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EKSClusterE11008B6",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EKSClusterCreationRoleB865C9E8",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EKSClusterKubectlHandlerRoleDefaultPolicyFF7EEBDC",
    "Roles": [
     {
      "Ref": "EKSClusterKubectlHandlerRoleCB45095B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/KubectlHandlerRole/DefaultPolicy/Resource"
   }
  },
  "EKSClusterRoleC0AEAC3D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "eks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSClusterPolicy"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/Role/Resource"
   }
  },
  "EKSClusterControlPlaneSecurityGroup580AD1FE": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "EKS Control Plane Security Group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "InstanceVpc678D242B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/ControlPlaneSecurityGroup/Resource"
   }
  },
  "EKSClusterCreationRoleB865C9E8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": [
         {
          "Fn::GetAtt": [
           "EKSClusterKubectlHandlerRoleCB45095B",
           "Arn"
          ]
         },
         {
          "Fn::GetAtt": [
           "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
           "Outputs.Assigment1StackawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRoleEEB778E3Arn"
          ]
         },
         {
          "Fn::GetAtt": [
           "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
           "Outputs.Assigment1StackawscdkawseksClusterResourceProviderOnEventHandlerServiceRole21855DE0Arn"
          ]
         }
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/Resource/CreationRole/Resource"
   }
  },
  "EKSClusterCreationRoleDefaultPolicy27A5F6BE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EKSClusterRoleC0AEAC3D",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "eks:CreateCluster",
        "eks:CreateFargateProfile",
        "eks:DeleteCluster",
        "eks:DescribeCluster",
        "eks:DescribeUpdate",
        "eks:TagResource",
        "eks:UntagResource",
        "eks:UpdateClusterConfig",
        "eks:UpdateClusterVersion"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":eks:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":cluster/my-eks-cluster"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":eks:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":cluster/my-eks-cluster/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "eks:DeleteFargateProfile",
        "eks:DescribeFargateProfile"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":eks:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":fargateprofile/my-eks-cluster/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeInstances",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeRouteTables",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "iam:CreateServiceLinkedRole",
        "iam:GetRole",
        "iam:listAttachedRolePolicies"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EKSClusterCreationRoleDefaultPolicy27A5F6BE",
    "Roles": [
     {
      "Ref": "EKSClusterCreationRoleB865C9E8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/Resource/CreationRole/DefaultPolicy/Resource"
   }
  },
  "EKSClusterE11008B6": {
   "Type": "Custom::AWSCDK-EKS-Cluster",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
      "Outputs.Assigment1StackawscdkawseksClusterResourceProviderframeworkonEvent548DE479Arn"
     ]
    },
    "Config": {
     "name": "my-eks-cluster",
     "version": "1.19",
     "roleArn": {
      "Fn::GetAtt": [
       "EKSClusterRoleC0AEAC3D",
       "Arn"
      ]
     },
     "kubernetesNetworkConfig": {
      "ipFamily": "ipv4"
     },
     "resourcesVpcConfig": {
      "subnetIds": [
       {
        "Ref": "InstanceVpcPublicSubnet1Subnet83FE0136"
       },
       {
        "Ref": "InstanceVpcPublicSubnet2SubnetE496164F"
       }
      ],
      "securityGroupIds": [
       {
        "Fn::GetAtt": [
         "EKSClusterControlPlaneSecurityGroup580AD1FE",
         "GroupId"
        ]
       }
      ],
      "endpointPublicAccess": true,
      "endpointPrivateAccess": true
     }
    },
    "AssumeRoleArn": {
     "Fn::GetAtt": [
      "EKSClusterCreationRoleB865C9E8",
      "Arn"
     ]
    },
    "AttributesRevision": 2
   },
   "DependsOn": [
    "EKSClusterCreationRoleDefaultPolicy27A5F6BE",
    "EKSClusterCreationRoleB865C9E8"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/Resource/Resource/Default"
   }
  },
  "EKSClusterKubectlReadyBarrierEF5C3970": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": "aws:cdk:eks:kubectl-ready"
   },
   "DependsOn": [
    "EKSClusterCreationRoleDefaultPolicy27A5F6BE",
    "EKSClusterCreationRoleB865C9E8",
    "EKSClusterE11008B6"
   ],
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/KubectlReadyBarrier"
   }
  },
  "EKSClusterNodegroupDefaultCapacityNodeGroupRoleF3ED94E9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKS_CNI_Policy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/NodegroupDefaultCapacity/NodeGroupRole/Resource"
   }
  },
  "EKSClusterNodegroupDefaultCapacity340B1C10": {
   "Type": "AWS::EKS::Nodegroup",
   "Properties": {
    "ClusterName": {
     "Ref": "EKSClusterE11008B6"
    },
    "NodeRole": {
     "Fn::GetAtt": [
      "EKSClusterNodegroupDefaultCapacityNodeGroupRoleF3ED94E9",
      "Arn"
     ]
    },
    "Subnets": [
     {
      "Ref": "InstanceVpcPrivateSubnet1Subnet46C04CD6"
     },
     {
      "Ref": "InstanceVpcPrivateSubnet2Subnet8DCB4F6A"
     }
    ],
    "AmiType": "AL2_x86_64",
    "ForceUpdateEnabled": true,
    "InstanceTypes": [
     "m5.large"
    ],
    "ScalingConfig": {
     "DesiredSize": 2,
     "MaxSize": 2,
     "MinSize": 2
    }
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/NodegroupDefaultCapacity/Resource"
   }
  },
  "EKSClusterAwsAuthmanifestA4E0796C": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.Assigment1StackawscdkawseksKubectlProviderframeworkonEventE0C0357AArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8400d52c425b38b3139ec8bbcf64df6e201369b8a\":\"\"}},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "EKSClusterNodegroupDefaultCapacityNodeGroupRoleF3ED94E9",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "EKSClusterE11008B6"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "EKSClusterCreationRoleB865C9E8",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8400d52c425b38b3139ec8bbcf64df6e201369b8a",
    "Overwrite": true
   },
   "DependsOn": [
    "EKSClusterKubectlReadyBarrierEF5C3970"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/EKSCluster/AwsAuth/manifest/Resource/Default"
   }
  },
  "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
       },
       "/580e17bf96afa0888bbfe0e1343939d3056afecac1ad0fa5e11406b722bdb58d.json"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource",
    "aws:asset:path": "Assigment1StackawscdkawseksClusterResourceProviderAC529BC2.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
       },
       "/5489d33f8e28423ce28aee5edfa36deb015795b9fe7e96f82fb0ce420ddd2271.json"
      ]
     ]
    },
    "Parameters": {
     "referencetoAssigment1StackEKSClusterKubectlHandlerRole952B9C4FArn": {
      "Fn::GetAtt": [
       "EKSClusterKubectlHandlerRoleCB45095B",
       "Arn"
      ]
     }
    }
   },
   "DependsOn": [
    "EKSClusterKubectlHandlerRoleDefaultPolicyFF7EEBDC",
    "EKSClusterKubectlHandlerRoleCB45095B"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource",
    "aws:asset:path": "Assigment1StackawscdkawseksKubectlProvider8D4A38B8.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VSy27CMBD8Fu7GrUDq45hGFUJVkRUqrpXjLLBNYiN7DYqi/HtNTOpy2pnxrnc8yYK/PPHHmby4uarqeYMl77ckVc2C9N27Je/fvKqBWL7XNxSLMA2qLsmRD0yZCpRpWyTeF3AyDsnYsS+xgYFa8H53Uld9J3ImfBnGt77UcVVChfEEX7JsIOlJy5wzCiWh0X/NV/C+FteykbSSBBfZMWHxHGC6eK0JbMBTQ3RyYxmFEI4taGJbUN4idStr/Gn0cCestSOpFcQrIx4YyjY830TTU52OhTV7DFKKcAoPasf7vPEuWGObkORhWppIdnGZpyP78OXoH9yn1LgHR8PA8jBq2gKc8TZ6SvjuKHg4YxW2hASBwic/oD6w/4NCWtnC1UggudEVTimPP8jAREdHox+W/Jm/zn4c4tx6TdgCL2L9Bbuf/oJdAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "Assigment1Stack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "EKSClusterHasEcrPublic0E1E292B": {
   "Fn::Equals": [
    {
     "Ref": "AWS::Partition"
    },
    "aws"
   ]
  },
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}